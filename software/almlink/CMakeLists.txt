cmake_minimum_required(VERSION 2.8)

# Project defines
project(ALM3LINK)
SET(VESRION_MAJOR "0")
SET(VESRION_MINOR "1")
SET(VESRION_PATCH "0")
SET(VERSION "$(VESRION_MAJOR).$(VESRION_MINOR).$(VESRION_PATCH)")
 	
## Compiler flags
if(CMAKE_COMPILER_IS_GNUCXX)
	
	ADD_DEFINITIONS(-g -O2 -Wall -lpthread)
	#ADD_DEFINITIONS(-g -O2 -Wall -W -Wextra )
    #SET(CMAKE_CXX_FLAGS "-g -O2 -Wall")   ## Optimize
    #SET(CMAKE_EXE_LINKER_FLAGS "-s -lm")  ## Strip binary
    #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
endif()

# Make sure the compiler can find include files 
#include_directories (${ALM3LINK_SOURCE_DIR}/lib/gpsd)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${ALM3LINK_BINARY_DIR}/bin/")
SET(PROJECT_SOURCE_DIR "source")
SET(ALM3LINK_SOURCE_DIR ${ALM3LINK_SOURCE_DIR}/${PROJECT_SOURCE_DIR})

#Subdirectory
add_subdirectory(${PROJECT_SOURCE_DIR})

# Messages
MESSAGE( STATUS "CMAKE_BINARY_DIR:         " ${CMAKE_BINARY_DIR} )
MESSAGE( STATUS "INSTALL_CMAKE_DIR:        " ${INSTALL_CMAKE_DIR} )
MESSAGE( STATUS "EXECUTABLE_OUTPUT_PATH:   " ${EXECUTABLE_OUTPUT_PATH} )
MESSAGE( STATUS "PROJECT_BINARY_DIR:       " ${PROJECT_BINARY_DIR} )
MESSAGE( STATUS "PROJECT_SOURCE_DIR:       " ${PROJECT_SOURCE_DIR} )
MESSAGE( STATUS "ALM3LINK_SOURCE_DIR:      " ${ALM3LINK_SOURCE_DIR})
MESSAGE( STATUS "ALM3LINK_BINARY_DIR:      " ${ALM3LINK_BINARY_DIR})


